description: >
  Sonar Scanner for .NET Core 2.1+ project

parameters:
  project-key:
    description: Key for the analyzed project in Sonar
    type: string
  project-name:
    description: Name of project in Sonar
    type: string
  host-url:
    description: Host URL where scan results will be posted
    type: string
  auth-token:
    description: Sonar Access Token to log in with
    type: string
  csproj-file-path:
    description: Path to .csproj file that will be executing tests.
    type: string
  config-file-path:
    description: Path to Nuget config file that will be used in dotnet restore
    type: string
  additional-dotnet-test-flags:
    description: Additional flags to pass to dotnet test {TestProject.csproj} command
    type: string

steps:
  - checkout
  - restore_cache:
      keys:
        - sonar_scanner_dotnet
  - run:
      name: Download Sonar
      command: |
        if [[ ! -x "~/tools/dotnet-sonarscanner" ]]; then
          echo "Installing Sonar Scanner"
          dotnet tool install dotnet-sonarscanner --tool-path ~/tools
        else
          echo "Sonar Scanner already installed"
        fi
  - save_cache:
        key: sonar_scanner_dotnet
        paths: ~/tools/dotnet-sonarscanner
  - run:
      name: Run Sonar Scanner
      command: |
        ~/tools/dotnet-sonarscanner begin \
          /k:"<< parameters.project-key >>" \
          /n:"<< parameters.project-name >>" \
          /v:"$CIRCLE_SHA1" \
          /d:sonar.host.url="<< parameters.host-url >>" \
          /d:sonar.login="<< parameters.auth-token >>" \
          /d:sonar.branch.name="$CIRCLE_BRANCH"
        
        if [ << parameters.config-file-path >> ]; then
          dotnet restore << parameters.csproj-file-path >> \
            --configfile=<< parameters.config-file-path >>
        else
          dotnet restore << parameters.csproj-file-path >>
        fi

        dotnet test << parameters.csproj-file-path >> \
        --no-restore \
        --logger "trx;LogFileName=testresults.trx" \
        /p:CollectCoverage=true \
        /p:CoverletOutputFormat=opencover << parameters.additional-dotnet-test-flags >>

        ~/tools/dotnet-sonarscanner end /d:sonar.login="<< parameters.auth-token >>"
